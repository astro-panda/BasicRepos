name: Basic Repos

on:
  push:
    branches:
      - main    
  pull_request:
    branches:
      - main
  release:
    types:
      - created
  workflow_dispatch:

jobs:
  Build_Test:
    environment: ${{ fromJSON('{"release":"prod","push":"preview"}')[github.event_name] || 'PR' }} 
    runs-on: ubuntu-latest
    env:
      build_version: ${{ fromJSON('{"release":"","push":"-preview"}')[github.event_name] || '-beta' }} 
    steps:
    - name: checkout
      uses: actions/checkout@v3.3.0
    
    - name: Add Package source
      run: dotnet nuget add source https://nuget.pkg.github.com/astro-panda/index.json --name github --username "${{ github.repository_owner }}" --password "${{ secrets.GITHUB_TOKEN }}" --store-password-in-clear-text

    - name: Restore ${{ inputs.package_name }}
      run: |-
        dotnet restore ${{ inputs.project_path }}        
    
    - name: Build ${{ inputs.package_name }}
      run: |-
        dotnet build --no-restore ${{ inputs.project_path }}        

    - name: Test ${{ inputs.package_name }}
      if: ${{ inputs.test_project }}
      run: |-        
        dotnet test ${{ inputs.test_project }} --logger trx --results-directory "${{ runner.temp }}"        
    
    - name: Test ${{ inputs.package_name }}
      if: always()
      uses: NasAmin/trx-parser@v0.2.0
      with:
        TRX_PATH: "${{ runner.temp }}"
        REPO_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: Pack ${{ inputs.package_name }}
      if: (github.ref_name == 'main' && github.event_name == 'push') || github.event_name == 'workflow_dispatch'
      run: |-
        dotnet pack ${{ inputs.project_path }} --version-suffix $build_version-${{ github.run_number }} --output "${{ runner.temp }}"

    - name: Pack ${{ inputs.package_name }} Production
      if: github.event_name == 'release'
      run: |-
        dotnet pack ${{ inputs.project_path }} --output "${{ runner.temp }}"
    
    - name: Publish ${{ inputs.package_name }}
      if: (github.ref_name == 'main' && github.event_name == 'push') || github.event_name == 'workflow_dispatch' || github.event_name == 'release'
      run: |-        
        dotnet nuget push ${{ runner.temp }}/*.nupkg -s github
